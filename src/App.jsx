import React, { useState } from 'react';
import axios from 'axios';
import { ToastContainer, toast } from 'react-toastify'; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ react-toastify
import 'react-toastify/dist/ReactToastify.css'; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ CSS ‡∏Ç‡∏≠‡∏á react-toastify
import './App.css';

function App() {
  const [file, setFile] = useState(null);
  const [name, setName] = useState('');
  const [birthYear, setBirthYear] = useState('');
  const [result, setResult] = useState(null); // ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏±‡πâ‡∏á message ‡πÅ‡∏•‡∏∞ image_url

  const years = Array.from({ length: 2568 - 2500 + 1 }, (_, i) => 2500 + i);

  const handleFileChange = (event) => {
    setFile(event.target.files[0]);
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    if (!file || !name) {
      toast.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö', {
        position: "top-right",
        autoClose:3000, // ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏•‡∏±‡∏á 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: false,
        closeButton: false, // ‡∏•‡∏ö‡∏õ‡∏∏‡πà‡∏° Close
      });
      return;
    }

    const formData = new FormData();
    formData.append('image', file);
    formData.append('name', name);
    formData.append('birthYear', birthYear);

    try {
      const response = await axios.post('http://172.21.20.191:1880/api/sol', formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });
      console.log('Response data:', response.data); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á response

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å detected_objects
      const detectedObjects = response.data.detected_objects || [];
      const objectsText = detectedObjects.length > 0
        ? detectedObjects.map(obj => `${obj.class} (${obj.confidence}%)`).join('\n')
        : "üîç ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ";

      const nameAndAgeText = `‡∏ú‡∏π‡πâ‡∏™‡πà‡∏áüë§\n   ‡∏ä‡∏∑‡πà‡∏≠: ${name}\n   ‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î: ‡∏û.‡∏®. ${birthYear}`;
      const message = `üì∏‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢ AI üî•\n\n${objectsText}\n\n${nameAndAgeText}`;

      // ‡πÄ‡∏û‡∏¥‡πà‡∏° timestamp ‡πÉ‡∏ô image_url
      const timestamp = new Date().getTime(); // ‡∏î‡∏∂‡∏á timestamp ‡πÄ‡∏õ‡πá‡∏ô milliseconds
      const imageUrlWithTimestamp = `${response.data.image_url || 'http://172.21.20.191/image'}?timestamp=${timestamp}`;

      setResult({
        message: message,
        image_url: imageUrlWithTimestamp
      });
      toast.success('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        closeButton: false, // ‡∏•‡∏ö‡∏õ‡∏∏‡πà‡∏° Close
      });
    } catch (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        closeButton: false, // ‡∏•‡∏ö‡∏õ‡∏∏‡πà‡∏° Close
      });
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏û.‡∏®. ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° timestamp
  const getTimestamp = () => {
    const now = new Date();
    const day = now.getDate();
    const month = now.getMonth() + 1; // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 0
    const year = now.getFullYear() + 543; // ‡πÅ‡∏õ‡∏•‡∏á ‡∏Ñ.‡∏®. ‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    const seconds = now.getSeconds().toString().padStart(2, '0');
    return `${day} ${getThaiMonth(month)} ${year} ${hours}:${minutes}:${seconds}`;
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÑ‡∏ó‡∏¢
  const getThaiMonth = (month) => {
    const thaiMonths = [
      '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô',
      '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô', '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°',
      '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
    ];
    return thaiMonths[month - 1];
  };

  return (
    <div className="App">
      <form onSubmit={handleSubmit}>
        <h1>Welcome {name || 'Guest'}</h1> {/* ‡πÅ‡∏™‡∏î‡∏á 'Guest' ‡∏ñ‡πâ‡∏≤ name ‡∏ß‡πà‡∏≤‡∏á */}
        <h2 style={{ marginTop: '-18px' }}>To Node-red Mini Project</h2>

        <div className="form-group">
          <label>‡∏ä‡∏∑‡πà‡∏≠: </label>
          <input
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
          />
        </div>
        <div className="form-group">
          <label>‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î (‡∏û.‡∏®.): </label>
          <select
            value={birthYear}
            onChange={(e) => setBirthYear(e.target.value)}
          >
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î --</option>
            {years.map((year) => (
              <option key={year} value={year}>
                {year}
              </option>
            ))}
          </select>
        </div>
        <div className="form-group">
          <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: </label>
          <input type="file" onChange={handleFileChange} />
        </div>
        <button type="submit">‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
      </form>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
      {result && (
        <div className="result">
          <h2>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</h2>
          <pre>{result.message}</pre>
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL */}
          {result.image_url && (
            <div className="result-image">
              <img
                src={result.image_url}
                alt="Processed Image"
                style={{ maxWidth: '100%', borderRadius: '5px', marginTop: '10px' }}
              />
              <p className="timestamp">Timestamp: {getTimestamp()}</p>
            </div>
          )}
        </div>
      )}
      <ToastContainer /> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° ToastContainer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
    </div>
  );
}

export default App;